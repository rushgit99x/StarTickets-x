@model StarTickets.Models.ViewModels.DeleteUserViewModel
@{
    ViewData["Title"] = "Delete User";
    Layout = "~/Views/Shared/CustomLayouts/_AdminDashboard.cshtml";
}

<div class="delete-user-container">
    <div class="page-header">
        <div class="page-title-section">
            <h1 class="page-title">
                <i class="fas fa-user-times text-danger"></i>
                Delete User
            </h1>
            <p class="page-subtitle">Permanently remove user from the system</p>
        </div>

        <div class="page-actions">
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left"></i>
                Back to Users
            </a>
        </div>
    </div>

    <div class="delete-warning-card">
        <div class="warning-header">
            <i class="fas fa-exclamation-triangle text-warning"></i>
            <h3>Warning: This action cannot be undone</h3>
        </div>

        <div class="user-info-section">
            <div class="user-avatar-large">
                @Model.User.FirstName.Substring(0, 1)@Model.User.LastName.Substring(0, 1)
            </div>
            <div class="user-details">
                <h4>@Model.User.FullName</h4>
                <p class="user-email">@Model.User.Email</p>
                <span class="role-badge role-@Model.User.Role">
                    @(Model.User.UserRole?.RoleName ?? "Unknown")
                </span>
                <span class="status-badge @(Model.User.IsActive ? "status-active" : "status-inactive")">
                    @(Model.User.IsActive ? "Active" : "Inactive")
                </span>
            </div>
        </div>

        @if (!Model.CanDelete)
        {
            <div class="dependency-warning">
                <h5><i class="fas fa-link text-danger"></i> Cannot Delete - User has Dependencies</h5>
                <p>This user cannot be deleted because they have associated data in the system:</p>

                <ul class="dependency-list">
                    @if (Model.HasBookings)
                    {
                        <li>
                            <i class="fas fa-ticket-alt"></i>
                            Has existing bookings in the system
                        </li>
                    }
                    @if (Model.HasEvents)
                    {
                        <li>
                            <i class="fas fa-calendar-alt"></i>
                            Has created events in the system
                        </li>
                    }
                </ul>

                <div class="alternative-actions">
                    <h6>Alternative Actions:</h6>
                    <ul>
                        <li>Deactivate the user instead of deleting</li>
                        <li>Transfer events to another organizer first</li>
                        <li>Wait for bookings to complete before deletion</li>
                    </ul>
                </div>

                <div class="action-buttons">
                    <a href="@Url.Action("Edit", new { id = Model.User.UserId })" class="btn btn-warning">
                        <i class="fas fa-edit"></i>
                        Edit User Instead
                    </a>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <i class="fas fa-times"></i>
                        Cancel
                    </a>
                </div>
            </div>
        }
        else
        {
            <div class="deletion-info">
                <h5><i class="fas fa-info-circle text-info"></i> Deletion Impact</h5>
                <p>Deleting this user will:</p>

                <ul class="impact-list">
                    <li><i class="fas fa-user-times"></i> Permanently remove the user account</li>
                    <li><i class="fas fa-database"></i> Remove all user profile information</li>
                    <li><i class="fas fa-history"></i> Delete user activity logs</li>
                    <li><i class="fas fa-envelope"></i> Remove email preferences and notifications</li>
                </ul>

                <div class="user-stats">
                    <div class="stat-item">
                        <span class="stat-label">Member Since:</span>
                        <span class="stat-value">@Model.User.CreatedAt?.ToString("MMMM dd, yyyy")</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">Last Updated:</span>
                        <span class="stat-value">@Model.User.UpdatedAt?.ToString("MMMM dd, yyyy")</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">Loyalty Points:</span>
                        <span class="stat-value">@Model.User.LoyaltyPoints.ToString("N0")</span>
                    </div>
                </div>
            </div>

            <div class="confirmation-section">
                <div class="form-group">
                    <label class="confirmation-label">
                        <input type="checkbox" id="confirmDelete" class="confirmation-checkbox">
                        I understand that this action cannot be undone and want to permanently delete this user account.
                    </label>
                </div>

                <div class="action-buttons">
                    <button type="button" id="deleteUserBtn" class="btn btn-danger" disabled>
                        <i class="fas fa-trash"></i>
                        Delete User Permanently
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <i class="fas fa-times"></i>
                        Cancel
                    </a>
                </div>
            </div>
        }
    </div>
</div>

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@section Styles {
    <style>
        .delete-user-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .delete-warning-card {
            background: white;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-left: 4px solid #dc3545;
        }

        .warning-header {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

            .warning-header i {
                font-size: 24px;
            }

            .warning-header h3 {
                margin: 0;
                color: #dc3545;
            }

        .user-info-section {
            display: flex;
            align-items: center;
            gap: 20px;
            margin-bottom: 25px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .user-avatar-large {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            font-weight: bold;
            flex-shrink: 0;
        }

        .user-details h4 {
            margin: 0 0 5px 0;
            color: #333;
        }

        .user-email {
            color: #666;
            margin-bottom: 10px;
        }

        .role-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
            margin-right: 10px;
        }

        .role-1 {
            background: #e3f2fd;
            color: #1976d2;
        }

        .role-2 {
            background: #f3e5f5;
            color: #7b1fa2;
        }

        .role-3 {
            background: #e8f5e8;
            color: #388e3c;
        }

        .status-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-active {
            background: #d4edda;
            color: #155724;
        }

        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }

        .dependency-warning {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }

            .dependency-warning h5 {
                color: #856404;
                margin-bottom: 10px;
            }

        .dependency-list, .impact-list {
            margin: 15px 0;
        }

            .dependency-list li, .impact-list li {
                margin-bottom: 8px;
                display: flex;
                align-items: center;
                gap: 8px;
            }

        .alternative-actions {
            margin-top: 15px;
        }

            .alternative-actions h6 {
                color: #856404;
                margin-bottom: 8px;
            }

        .deletion-info {
            background: #d1ecf1;
            border: 1px solid #bee5eb;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }

            .deletion-info h5 {
                color: #0c5460;
                margin-bottom: 10px;
            }

        .user-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }

        .stat-item {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            background: white;
            border-radius: 4px;
        }

        .stat-label {
            font-weight: 500;
            color: #666;
        }

        .stat-value {
            font-weight: 600;
            color: #333;
        }

        .confirmation-section {
            border-top: 1px solid #eee;
            padding-top: 20px;
        }

        .confirmation-label {
            display: flex;
            align-items: flex-start;
            gap: 10px;
            cursor: pointer;
            font-weight: 500;
            color: #333;
        }

        .confirmation-checkbox {
            margin-top: 2px;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
            transition: all 0.2s;
            cursor: pointer;
        }

            .btn:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

            .btn-danger:hover:not(:disabled) {
                background: #c82333;
            }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

            .btn-secondary:hover {
                background: #5a6268;
            }

        .btn-warning {
            background: #ffc107;
            color: #212529;
        }

            .btn-warning:hover {
                background: #e0a800;
            }

        .alert {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            max-width: 400px;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Enable/disable delete button based on confirmation checkbox
            $('#confirmDelete').change(function() {
                $('#deleteUserBtn').prop('disabled', !$(this).is(':checked'));
            });

            // Handle delete button click
            $('#deleteUserBtn').click(function() {
                if (!$('#confirmDelete').is(':checked')) {
                    return;
                }

                const userId = @Model.User.UserId;
                const userName = '@Html.Raw(Model.User.FullName)';

                if (!confirm(`This is your final confirmation. Are you absolutely sure you want to permanently delete ${userName}?`)) {
                    return;
                }

                // Show loading state
                $(this).prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Deleting...');

                // Perform delete
                $.post('@Url.Action("DeleteConfirmed")', {
                    id: userId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                .done(function(response) {
                    if (response.success) {
                        showNotification(response.message, 'success');
                        setTimeout(() => {
                            window.location.href = '@Url.Action("Index")';
                        }, 2000);
                    } else {
                        showNotification(response.message, 'error');
                        $('#deleteUserBtn').prop('disabled', false).html('<i class="fas fa-trash"></i> Delete User Permanently');
                    }
                })
                .fail(function() {
                    showNotification('An error occurred while deleting the user.', 'error');
                    $('#deleteUserBtn').prop('disabled', false).html('<i class="fas fa-trash"></i> Delete User Permanently');
                });
            });
        });

        function showNotification(message, type) {
            const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';

            const alertHtml = `
                <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                    <i class="fas ${icon}"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            $('body').append(alertHtml);

            setTimeout(() => {
                $('.alert').fadeOut();
            }, 5000);
        }
    </script>
}

<!-- Anti-forgery token -->
@Html.AntiForgeryToken()